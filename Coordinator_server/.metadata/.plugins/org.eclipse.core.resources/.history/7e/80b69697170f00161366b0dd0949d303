package messages;

import java.io.Serializable;

import entities.Entity;

public abstract class Message implements Serializable{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Entity owner;
	private String message;
	private Type TypeOfMessage;
	private enum Type{None, Client_Message, Driver_Message, Coordinator_Message};

	/**
	 * Constructor of the {@link Message} abstract class
	 *
	 * @author Felipe Izepe
	 * @version 1.0
	 * @since 2016-04-30
	 * @param Entity owner of the message
	 * @param String message that will be sent and read
	 */
	public Message(Entity owner, String message) {
		this.owner = owner;
		this.message = message;
		this.TypeOfMessage = null;
	}
	
	/**
	 * Gets the Entity that created the message
	 *
	 * @author Felipe Izepe
	 * @version 1.0
	 * @since 2016-04-30
	 */
	public Entity getOwner() {
		return owner;
	}
	
	/**
	 * Gets the message that was stored in the class
	 *
	 * @author Felipe Izepe
	 * @version 1.0
	 * @since 2016-04-30
	 */
	public String getMessage() {
		return message;
	}
	
	/**
	 * Sets the type of the message based on the owner
	 *
	 *@param type - 0 for client, 1 for driver and 2 for coordinator
	 *
	 * @author Felipe Izepe
	 * @version 1.0
	 * @since 2016-04-30
	 */
	public void serType(int type)
	{
		switch(type){
		case 0:
			this.TypeOfMessage = Type.Client_Message;
			break;
		case 1:
			this.TypeOfMessage = Type.Driver_Message;
			break;
		case 2: 
			this.TypeOfMessage = Type.Coordinator_Message;
			break;
		default:
			return;
		}
	}
	
	public boolean isFromClient()
	{
		
	}
}
