package managers;

import java.util.ArrayList;

import threads.Client_Thread;
import threads.Driver_Thread;
import entities.Client;
import entities.Driver;

public class Driver_Manager {

	private static Driver_Manager self = null;
	private ArrayList<Driver_Thread> driverList;
	
	public Driver_Manager() {
		self = this;
		this.driverList = new ArrayList<>();
	}
	
	
	
	public static Driver_Manager getInstance()
	{
		if(self == null)
			self = new Driver_Manager();
		
		return self;
	}
	
	public void addClientThread(Driver_Thread driver)
	{
		this.driverList.add(driver);
	}
	
	public Driver getClientAt(int index)
	{
		return this.driverList.get(index).getOwner();
	}
	
	public void removeClient(int index)
	{
		this.driverList.remove(index);
	}
	
	public ArrayList<Client> getClientList() {
		ArrayList<Client> ar = new ArrayList<>();
		for(int count1 = 0; count1 < driverList.size(); count1++)
		{
			ar.add(driverList.get(count1).getOwner());
		}
		
		return ar;
	}
}
